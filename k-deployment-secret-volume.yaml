apiVersion: apps/v1
kind: Deployment
metadata:
  name: kk-flask-app-deployment-secret-volumes
  labels:
    app: kk-flask-app-k8s
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kk-flask-app-k8s
  template:
    metadata:
      labels:
        app: kk-flask-app-k8s
    spec:
      containers:
        - name: flask-app-container
          image: kanishkmalik/kk-flask-app
          ports:
            - name: flask-port 
              containerPort: 5000
          volumeMounts:
            - name: cred-volume
              mountPath: /etc/creds
              readOnly: true
      volumes:
        - name: cred-volume
          secret: 
            secretName: mysecret
          # env: 
          #  - name: SECRET_USERNAME
          #    valueFrom:
          #      secretKeyRef:
          #        name: mysecret
          #        key: username
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: flask-port
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 30
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: flask-port
          #   initialDelaySeconds: 10
          #   timeoutSeconds: 30


# kubectl apply -f k-deployment.yaml
# kubectl apply -f k-service.yaml
# kubectl describe <service_name>
# kubectl get pod
# kubectl get service
# kubectl get pod -o wide
# kubectl get deployment kk-flask-app-deployment -o yaml
# kubectl delete -f <deployment yaml>
# kubectl exec -it kk-flask-app-deployment-c47b8f846-dbrn7 -- tail /python-docker/app.log   
# kubectl exec kk-flask-app-deployment-secret-volumes-c4985d699-wqpf7 -i -t -- /bin/bash

# Running Kubernetes dashboard
# Install the Dashboard application into our cluster
# kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc6/aio/deploy/recommended.yaml
# # Check the resources it created based on the new namespace created
# kubectl get all -n kubernetes-dashboard
# Start a kubectl proxy
# kubectl proxy
# Enter the URL on your browser: http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
# Get the Token for the ServiceAccount using below command and with help of service account and role binding. Refer : https://kubernetes.io/blog/2020/05/21/wsl-docker-kubernetes-on-the-windows-desktop/
# kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')
# Copy the token and copy it into the Dashboard login and press "Sign in"